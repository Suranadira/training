From 7fe12da84623d5760c4a4e11caac675f46706fd9 Mon Sep 17 00:00:00 2001
From: alfred <mail@alfred-albrecht.net>
Date: Wed, 20 Nov 2019 14:16:25 +0100
Subject: [PATCH 1/2] [Bugfix] update to current spring version

---
 .../src/007_module/rest.people.server/pom.xml |  4 ++--
 .../application/PeopleRepository.java         |  4 ++--
 .../application/PeopleRestController.java     | 22 ++++++++-----------
 3 files changed, 13 insertions(+), 17 deletions(-)

diff --git a/react/001_course/src/007_module/rest.people.server/pom.xml b/react/001_course/src/007_module/rest.people.server/pom.xml
index 5252784..231cafc 100644
--- a/react/001_course/src/007_module/rest.people.server/pom.xml
+++ b/react/001_course/src/007_module/rest.people.server/pom.xml
@@ -14,14 +14,14 @@
 	<parent>
 		<groupId>org.springframework.boot</groupId>
 		<artifactId>spring-boot-starter-parent</artifactId>
-		<version>1.5.7.RELEASE</version>
+		<version>2.1.7.RELEASE</version>
 		<relativePath/> <!-- lookup parent from repository -->
 	</parent>
 
 	<properties>
 		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
-		<java.version>1.8</java.version>
+		<!--<java.version>1.8</java.version>-->
 	</properties>
 
 	<dependencies>
diff --git a/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRepository.java b/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRepository.java
index 93a2ef7..633a72d 100644
--- a/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRepository.java
+++ b/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRepository.java
@@ -1,7 +1,7 @@
 package org.javacream.training.application;
 
-import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.repository.CrudRepository;
 
-public interface PeopleRepository extends JpaRepository<Person, Long>{
+public interface PeopleRepository extends CrudRepository<Person, Long> {
 
 }
diff --git a/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRestController.java b/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRestController.java
index 3af1502..a85f466 100644
--- a/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRestController.java
+++ b/react/001_course/src/007_module/rest.people.server/src/main/java/org/javacream/training/application/PeopleRestController.java
@@ -1,8 +1,5 @@
 package org.javacream.training.application;
 
-import java.util.List;
-
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.CrossOrigin;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestBody;
@@ -12,21 +9,20 @@ import org.springframework.web.bind.annotation.RestController;
 
 @RestController
 @CrossOrigin
-public class PeopleRestController{
-	
+public class PeopleRestController {
+	private final PeopleRepository repo;
 
-	@Autowired private PeopleRepository repo;
+	public PeopleRestController(PeopleRepository repo) {
+		this.repo = repo;
+	}
 
 	@RequestMapping(method=RequestMethod.GET, path="/people/{id}", produces="application/json")
 	public Person findPersonById(@PathVariable("id") Long personId) {
-		return repo.findOne(personId);
+		return repo.findById(personId).orElseThrow(() -> new IllegalArgumentException("Person with id="+personId+" does not exist."));
 	}
 	@RequestMapping(method=RequestMethod.GET, path="/people", produces="application/json")
-	public Person[] findAllPeople() {
-		List<Person> people = repo.findAll();
-		Person[] result = new Person[people.size()];
-		people.toArray(result);
-		return result;
+	public Iterable<Person> findAllPeople() {
+		return repo.findAll();
 	}
 
 	@RequestMapping(method=RequestMethod.POST, path="/people", consumes="application/json")
@@ -41,7 +37,7 @@ public class PeopleRestController{
 
 	@RequestMapping(method=RequestMethod.DELETE, path="/people/{id}")
 	public void deletePersonById(@PathVariable("id") Long personId) {
-		repo.delete(personId);
+		repo.deleteById(personId);
 	}
 
 }
\ No newline at end of file
-- 
2.24.0


From f0296906ae017041c3f8e601950cf0b32147b1ac Mon Sep 17 00:00:00 2001
From: alfred <mail@alfred-albrecht.net>
Date: Wed, 20 Nov 2019 14:19:54 +0100
Subject: [PATCH 2/2] [Minor] .gitignore added

---
 .gitignore | 76 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 76 insertions(+)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..a6f460b
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,76 @@
+target
+.DS_Store
+*.iml
+docker/*.jar
+logs/
+out
+dist
+node_modules
+reports
+.idea/
+
+
+# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839
+
+# User-specific stuff
+.idea/**/workspace.xml
+.idea/**/tasks.xml
+.idea/**/usage.statistics.xml
+.idea/**/dictionaries
+.idea/**/shelf
+
+# Sensitive or high-churn files
+.idea/**/dataSources/
+.idea/**/dataSources.ids
+.idea/**/dataSources.local.xml
+.idea/**/sqlDataSources.xml
+.idea/**/dynamic.xml
+.idea/**/uiDesigner.xml
+.idea/**/dbnavigator.xml
+
+# Gradle
+.idea/**/gradle.xml
+.idea/**/libraries
+
+# Plugins
+.idea/sonarlint/**
+.idea/sonarIssues.xml
+
+# Gradle and Maven with auto-import
+# When using Gradle or Maven with auto-import, you should exclude module files,
+# since they will be recreated, and may cause churn.  Uncomment if using
+# auto-import.
+# .idea/modules.xml
+# .idea/*.iml
+# .idea/modules
+
+# CMake
+cmake-build-*/
+
+# Mongo Explorer plugin
+.idea/**/mongoSettings.xml
+
+# File-based project format
+*.iws
+
+# IntelliJ
+out/
+
+# mpeltonen/sbt-idea plugin
+.idea_modules/
+
+# JIRA plugin
+atlassian-ide-plugin.xml
+
+# Cursive Clojure plugin
+.idea/replstate.xml
+
+# Crashlytics plugin (for Android Studio and IntelliJ)
+com_crashlytics_export_strings.xml
+crashlytics.properties
+crashlytics-build.properties
+fabric.properties
+
+# Editor-based Rest Client
+.idea/httpRequests
+frontend/tests_output
-- 
2.24.0

